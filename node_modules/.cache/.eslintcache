[{"C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\index.js":"1","C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\common\\containers\\App.js":"2","C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\routes\\index.js":"3","C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\routes\\App\\index.js":"4","C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\routes\\App\\components\\App.js":"5"},{"size":292,"mtime":1651579372189,"results":"6","hashOfConfig":"7"},{"size":98,"mtime":1651579372189,"results":"8","hashOfConfig":"7"},{"size":125,"mtime":1651579372192,"results":"9","hashOfConfig":"7"},{"size":45,"mtime":1651579372190,"results":"10","hashOfConfig":"7"},{"size":2436,"mtime":1651685644504,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1s1msf6",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\index.js",[],["25","26"],"C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\common\\containers\\App.js",["27"],"import React from 'react';\r\n\r\nexport default function App({ children }) {\r\n  return children;\r\n}\r\n","C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\routes\\index.js",[],"C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\routes\\App\\index.js",[],"C:\\Users\\saifi\\Desktop\\exo\\react-coding-challenges\\dark-mode\\src\\routes\\App\\components\\App.js",["28","29","30","31","32","33"],"import React, {useState} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMoon, fas, faSun } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/_app.scss';\r\n\r\nfunction App() {\r\n\r\n  const [isDark, setIsDark] = useState(true);\r\n\r\n  let iconTheme, btnColor;\r\n  if (isDark == true) {\r\n    iconTheme = faMoon;\r\n    btnColor = \"#\"\r\n  }\r\n  else {\r\n    iconTheme = faSun;\r\n    btnColor = \"#FFA500\";\r\n  } \r\n\r\n  return (\r\n    <div className= {isDark ? \"dark-mode app\" : \"app\"}>\r\n      <div className=\"level\">\r\n        <div>\r\n          <h1 className=\"title\">Dark Mode Challenge</h1>\r\n        </div>\r\n\r\n        {/* --The button that should toggle dark mode-- */}\r\n        <button className=\"app__dark-mode-btn icon level-right\" onClick={() => setIsDark(!isDark)}>\r\n          <FontAwesomeIcon icon={isDark ? faMoon : faSun} color={isDark ? \"#ffffff\" : \"#FFA500\"} />\r\n        </button>\r\n\r\n      </div>\r\n\r\n      <div className=\"columns\">\r\n        <div className=\"column\">\r\n          <p>Lollipop powder powder. Cotton candy caramels chupa chups halvah muffin caramels apple pie topping cake. Topping chocolate bar pastry chocolate cake. Cupcake tart jujubes drag√©e jelly-o icing sugar plum. Chocolate bar lollipop candy canes. Biscuit croissant apple pie pudding caramels wafer tart tootsie roll macaroon. Croissant tiramisu chocolate bar carrot cake lemon drops halvah.</p>\r\n        </div>\r\n        <div className=\"column\">\r\n          <p>Marshmallow tiramisu liquorice bear claw chocolate bar bear claw tart. Muffin chupa chups pie. Brownie apple pie topping lemon drops marzipan toffee. Pudding macaroon icing ice cream bonbon cake tart. Pudding sugar plum chocolate cake cake biscuit pastry pastry chocolate bar tart. Lemon drops dessert gummies icing.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"field\">\r\n        <div className=\"control\">\r\n          <input className=\"input\" type=\"text\" placeholder=\"Name\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"field\">\r\n        <div className=\"control\">\r\n          <input className=\"input\" type=\"text\" placeholder=\"Email\" />\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"section\">\r\n        <div className=\"buttons level-right\">\r\n          <a className=\"button is-primary\">Save</a>\r\n          <a className=\"button is-link\">Submit</a>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"42","line":3,"column":18,"nodeType":"40","messageId":"41","endLine":3,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":11,"column":14,"nodeType":"45","messageId":"46","endLine":11,"endColumn":16},{"ruleId":"38","severity":1,"message":"47","line":16,"column":5,"nodeType":"40","messageId":"41","endLine":16,"endColumn":14},{"ruleId":"38","severity":1,"message":"48","line":17,"column":5,"nodeType":"40","messageId":"41","endLine":17,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":57,"column":11,"nodeType":"51","endLine":57,"endColumn":44},{"ruleId":"49","severity":1,"message":"50","line":58,"column":11,"nodeType":"51","endLine":58,"endColumn":41},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'fas' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'iconTheme' is assigned a value but never used.","'btnColor' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]